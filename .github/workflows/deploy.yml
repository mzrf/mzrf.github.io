name: Update list and deploy

on:
  push:
    paths:
      - 'p/**'
      - '.github/workflows/update-list-and-deploy.yml'
    branches:
      - master

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect latest uploaded file
        id: detect
        run: |
          FILE=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^p/\[' | tail -n 1)
          if [ -z "$FILE" ]; then
            echo "❌ No new tagged file found."
            exit 1
          fi

          BASENAME=$(basename "$FILE")
          TAGS_RAW=$(echo "$BASENAME" | sed -n 's/^\[\(.*\)\].*/\1/p')
          FILENAME=$(echo "$BASENAME" | sed -n 's/^\[[^\]]*\]\(.*\)/\1/p')

          echo "Detected file: $FILE"
          echo "Raw tags: $TAGS_RAW"
          echo "Clean name: $FILENAME"

          # Rename file
          mv "$FILE" "p/$FILENAME"

          echo "name=$FILENAME" >> $GITHUB_OUTPUT
          echo "tags=$TAGS_RAW" >> $GITHUB_OUTPUT

      - name: Update list.json
        run: |
          FILE="p/${{ steps.detect.outputs.name }}"
          RAW_TAGS="${{ steps.detect.outputs.tags }}"
          NAME="${{ steps.detect.outputs.name }}"
          DATE=$(date -u +"%Y-%m-%d")

          # Split tags
          IFS=$'\n' read -rd '' -a TAG_ARRAY <<< "$(echo "$RAW_TAGS" | tr ',; ' '\n' | sed '/^$/d')"
          TAGS_JSON=$(printf '%s\n' "${TAG_ARRAY[@]}" | jq -R . | jq -s .)

          echo "Parsed tags: $TAGS_JSON"

          if [ ! -f list.json ]; then
            echo "[]" > list.json
          fi

          exists=$(jq --arg name "$NAME" 'map(select(."1" == $name)) | length' list.json)

          if [ "$exists" -gt 0 ]; then
            echo "✅ Existing file — updating"
            jq --arg name "$NAME" --arg date "$DATE" --argjson tags "$TAGS_JSON" '
              map(
                if ."1" == $name then
                  ."2" = $date |
                  ."3" = ((.["3"] + $tags) | unique)
                else .
                end
              )
            ' list.json > list.tmp.json
          else
            echo "➕ New file — adding"
            jq --arg name "$NAME" --arg date "$DATE" --argjson tags "$TAGS_JSON" '
              . + [{"1": $name, "2": $date, "3": $tags}]
            ' list.json > list.tmp.json
          fi

          mv list.tmp.json list.json

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add list.json p
          git commit -m "📄 update list.json for ${{ steps.detect.outputs.name }}"
          git push

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload site content
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
