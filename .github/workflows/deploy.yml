name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: mzrf/mzrf.github.io
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # No other specific Python libraries are needed for this script

    - name: Run Python script to update list.json (Regex for Tags)
      run: python lib/update_list.py

    # IMPORTANT: This step will now only rename the SINGLE most recently modified file
    # matching the [tag]filename.md pattern, using the robust find | xargs ls -rt method.
    - name: Rename the latest modified file in p/ matching [tag]filename.md
      run: |
        cd p/
        
        # Recommended Method 2: Use find for filtering and -print0 with xargs for robustness
        # then ls -rt to find the latest among the matched files.
        # This is more robust for filenames with spaces or special characters.
        LATEST_FILE=$(find . -maxdepth 1 -type f -name '\[*\]*.md' -print0 | xargs -0 ls -rt 2>/dev/null | tail -1)
        
        if [ -n "$LATEST_FILE" ]; then # Check if a file was found
          # Remove leading "./" if find/ls outputs it
          LATEST_FILE="${LATEST_FILE##./}"

          echo "Found latest modified file matching pattern: $LATEST_FILE"
          
          # Extract the part after the first ']'
          new_name="${LATEST_FILE#*]}" 
          
          # Optional: remove any leading spaces that might exist after ']'
          new_name="${new_name##*( )}" 
          
          if [ -n "$new_name" ] && [ "$LATEST_FILE" != "$new_name" ]; then
            echo "Renaming '$LATEST_FILE' to '$new_name'"
            mv "$LATEST_FILE" "$new_name"
          else
            echo "Skipping rename for '$LATEST_FILE': New name is empty or same as original, or pattern mismatch."
          }
        else
          echo "No files found in p/ matching '[tag]*.md' pattern for renaming."
        fi
      working-directory: ${{ github.workspace }} # Ensure this step runs from the root of the repo

    - name: Commit and Push list.json and renamed files
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        
        git add list.json         # Add list.json to staging area
        git add p/                # Add the p/ directory to staging area (to track renames)
        
        git diff-index --quiet HEAD || git commit -m "Update list.json and rename latest file via GitHub Actions (Robust ls -rt)"
        
        git push origin master    # Push changes to master branch

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: .
        token: ${{ secrets.GITHUB_TOKEN }}
        clean: true
        force: true
        attempt-limit: 3
