name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: mzrf/mzrf.github.io
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # No other specific Python libraries are needed for this script
    - name: Run Python script to update list.json (Regex for Tags)
      run: python lib/update_list.py

    # 重要：此步骤现在将仅重命名 p/ 目录中与 [tag]filename.md 模式匹配的最新修改的单个文件，
    # 使用健壮的 find | xargs ls -rt 方法。
    - name: Rename the latest modified file in p/ matching [tag]filename.md
      run: |
        cd p/ || { echo "Directory p/ not found"; exit 1; }

        echo "📄 Listing all *.md files in p/:"
        ls -l *.md || echo "⚠️ No markdown files found."

        echo "🔍 Searching for files matching pattern: [tag]*.md"
        MATCHING_FILES=$(find . -maxdepth 1 -type f -name '\[*\]*.md' -print0)
        
        if [ -z "$MATCHING_FILES" ]; then
          echo "❌ No matching files found in p/"
          exit 0
        fi

        # 获取最新修改的匹配文件
        LATEST_FILE=$(find . -maxdepth 1 -type f -name '\[*\]*.md' -print0 | xargs -0 ls -rt 2>/dev/null | tail -1)

        echo "✅ Found latest matching file: $LATEST_FILE"

        # 移除前缀 "./"
        LATEST_FILE="${LATEST_FILE##./}"

        new_name="${LATEST_FILE#*]}"
        new_name="${new_name##*( )}"  # 移除可能的空格

        if [ -n "$new_name" ] && [ "$LATEST_FILE" != "$new_name" ]; then
          echo "🔁 Renaming '$LATEST_FILE' → '$new_name'"
          mv "$LATEST_FILE" "$new_name"
        else
          echo "⚠️ Rename skipped: Target name is empty or unchanged."
        fi
      working-directory: ${{ github.workspace }} # 确保此步骤在仓库的根目录运行

    - name: Commit and Push list.json and renamed files
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        
        git add list.json         # 将 list.json 添加到暂存区
        git add p/                # 将 p/ 目录添加到暂存区（以跟踪重命名）
        
        git diff-index --quiet HEAD || git commit -m "Update list.json and rename latest file via GitHub Actions (Robust ls -rt)"
        
        git push origin master    # 推送更改到 master 分支

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: .
        token: ${{ secrets.GITHUB_TOKEN }}
        clean: true
        force: true
        attempt-limit: 3

  call-jekyll-deploy:
      uses: ./.github/workflows/jekyll-gh-pages.yml # 引用本地的可复用工作流，@main 表示引用main分支的版本

      
